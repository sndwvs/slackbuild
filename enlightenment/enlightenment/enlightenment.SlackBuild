#!/bin/bash

CWD=$(pwd)

NAME="enlightenment"
VERSION=${VERSION:-0.24.2}
BUILD=${BUILD:-3}
PACKAGER=${PACKAGER:-mara}

wget -c https://download.enlightenment.org/rel/apps/enlightenment/$NAME-$VERSION.tar.xz

NUMJOBS=${NUMJOBS:-" -j$(grep -c ^processor /proc/cpuinfo 2>/dev/null) "}


# Automatically determine the architecture we're building on:
MARCH=$( uname -m )
if [ -z "$ARCH" ]; then
  case "$MARCH" in
    i?86)    export ARCH=i586 ;;
    armv7hl) export ARCH=$MARCH ;;
    arm*)    export ARCH=arm ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
    *)       export ARCH=$MARCH ;;
  esac
fi

if [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O3 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O3 -fPIC"
  LIBDIRSUFFIX="64"
elif [ "$ARCH" = "armv7hl" ]; then
  SLKCFLAGS="-O3 -march=armv7-a -mfpu=vfpv3-d16"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "arm" ]; then
  SLKCFLAGS="-O3 -march=armv7-a -mtune=cortex-a7 -mfpu=neon-vfpv4 -mfloat-abi=hard"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "aarch64" ]; then
  SLKCFLAGS="-O3"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

case "$ARCH" in
    arm*) TARGET=$ARCH-slackware-linux-gnueabihf ;;
    *)    TARGET=$ARCH-slackware-linux ;;
esac

# Establishment tmp directory for
TMP=${TMP:-/tmp}
PKG=$TMP/package-$NAME
rm -rf $PKG
mkdir -p $PKG

# Delete a directory previous build / create new and change rights
cd $TMP
rm -rf $NAME-$VERSION
tar xvf $CWD/$NAME-$VERSION.tar.?z* || exit 1
cd $NAME-$VERSION || exit 1
chown -R root:root .
find . \
 \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \;

# PATCH-FIX-OPENSUSE - enlightenment-0.16.999.65256-dont_require_suidbit.patch sleep_walker@opensuse.org -- upstream insist on having suidbit
patch -Np0 -i $CWD/patches/enlightenment-0.16.999.65256-dont_require_suidbit.patch || exit 1
# PATCH-FEATURE-OPENSUSE dont_offer_updates.patch -- don't offer updates, that's up to package manager -- sleep_walker@opensuse.org
patch -Np1 -i $CWD/patches/dont_offer_updates.patch || exit 1
# PATCH-FEATURE-OPENSUSE as we use Network Manager rather then connman offline mode doesn't do anything so Hide the menu option
patch -Np1 -i $CWD/patches/feature-suse-disable-offline-menu.patch || exit 1
patch -Np1 -i $CWD/patches/feature-qt-apps-gtk2-theme.patch || exit 1
patch -Np1 -i $CWD/patches/system.conf.patch || exit 1

# Copy In new Network Wizard
rm src/modules/wizard/page_110.c
cp -v $CWD/network_manager_wizard.c src/modules/wizard/page_110.c

SLKCFLAGS="$SLKCFLAGS -fcommon" # https://wiki.gentoo.org/wiki/Gcc_10_porting_notes/fno_common
SLKCFLAGS="$SLKCFLAGS -fvisibility=hidden"

# Configuration
meson . build \
    --prefix=/usr/ \
    --libdir=/usr/lib${LIBDIRSUFFIX} \
    -Dsystemd=false \
    -Dbuild-id=$TARGET

# Compilation
CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
ninja -C build -v || exit 1

DESTDIR=$PKG ninja -C build install

# Don't ship .la files:
rm -f $PKG/{,usr/}lib${LIBDIRSUFFIX}/*.la

# Don't clobber config files on upgrade
mv $PKG/etc/enlightenment/sysactions.conf $PKG/etc/enlightenment/sysactions.conf.new
mv $PKG/etc/xdg/menus/e-applications.menu $PKG/etc/xdg/menus/e-applications.menu.new

# Handle the xinitrc file
install -Dm755 $CWD/xinitrc.enlightenment $PKG/etc/X11/xinit/xinitrc.enlightenment.new

# PAM configuration
install -Dm644 $CWD/enlightenment.pam $PKG/etc/pam.d/enlightenment.new

# Strip binaries:
find $PKG | xargs file | grep -e "executable" -e "shared object" \
  | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null

# Compress manual pages:
find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do
  ln -s $( readlink $i ).gz $i.gz
  rm $i
done

# Copy docs
mkdir -vpm755 $PKG/usr/doc/$NAME-$VERSION
cp -fav \
  LICENSE README \
  $PKG/usr/doc/$NAME-$VERSION/
cat $CWD/$NAME.SlackBuild > $PKG/usr/doc/$NAME-$VERSION/$NAME.SlackBuild

# Description and installation script
mkdir -p $PKG/install
zcat $CWD/doinst.sh.gz > $PKG/install/doinst.sh
cat $CWD/slack-desc > $PKG/install/slack-desc

# Package creation
cd $PKG
makepkg -l n -c n $TMP/${NAME}-${VERSION}-${ARCH}-${BUILD}${PACKAGER}.txz
